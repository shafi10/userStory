[{"E:\\all code\\React\\userprofile\\src\\index.js":"1","E:\\all code\\React\\userprofile\\src\\App.js":"2","E:\\all code\\React\\userprofile\\src\\contextApi\\posts\\PostContext.js":"3","E:\\all code\\React\\userprofile\\src\\contextApi\\posts\\PostReducer.js":"4","E:\\all code\\React\\userprofile\\src\\components\\posts\\Posts.js":"5","E:\\all code\\React\\userprofile\\src\\components\\profile\\Profile.js":"6","E:\\all code\\React\\userprofile\\src\\components\\layout\\Navbar.js":"7","E:\\all code\\React\\userprofile\\src\\contextApi\\users\\UsersContext.js":"8","E:\\all code\\React\\userprofile\\src\\contextApi\\users\\UsersReducer.js":"9","E:\\all code\\React\\userprofile\\src\\components\\Users\\Users.js":"10","E:\\all code\\React\\userprofile\\src\\components\\layout\\UsersPagination.js":"11","E:\\all code\\React\\userprofile\\src\\components\\Users\\UserDetails.js":"12","E:\\all code\\React\\userprofile\\src\\components\\layout\\UsersDetailsPagination.js":"13","E:\\all code\\React\\userprofile\\src\\components\\profile\\actions.js":"14","E:\\all code\\React\\userprofile\\src\\components\\profile\\ActionForm.js":"15","E:\\all code\\React\\userprofile\\src\\components\\profile\\PostDetails.js":"16"},{"size":219,"mtime":1611291807124,"results":"17","hashOfConfig":"18"},{"size":1336,"mtime":1611382238474,"results":"19","hashOfConfig":"18"},{"size":982,"mtime":1611295150826,"results":"20","hashOfConfig":"18"},{"size":487,"mtime":1611295139141,"results":"21","hashOfConfig":"18"},{"size":1198,"mtime":1611383535657,"results":"22","hashOfConfig":"18"},{"size":1945,"mtime":1611382314931,"results":"23","hashOfConfig":"18"},{"size":1626,"mtime":1611383716527,"results":"24","hashOfConfig":"18"},{"size":1683,"mtime":1611331279789,"results":"25","hashOfConfig":"18"},{"size":671,"mtime":1611330243764,"results":"26","hashOfConfig":"18"},{"size":5696,"mtime":1611335608935,"results":"27","hashOfConfig":"18"},{"size":713,"mtime":1611322710150,"results":"28","hashOfConfig":"18"},{"size":3050,"mtime":1611332642516,"results":"29","hashOfConfig":"18"},{"size":746,"mtime":1611331975066,"results":"30","hashOfConfig":"18"},{"size":2434,"mtime":1611383212363,"results":"31","hashOfConfig":"18"},{"size":3318,"mtime":1611381982295,"results":"32","hashOfConfig":"18"},{"size":1746,"mtime":1611383753820,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"17hz2mx",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\all code\\React\\userprofile\\src\\index.js",[],["69","70"],"E:\\all code\\React\\userprofile\\src\\App.js",[],"E:\\all code\\React\\userprofile\\src\\contextApi\\posts\\PostContext.js",[],"E:\\all code\\React\\userprofile\\src\\contextApi\\posts\\PostReducer.js",[],"E:\\all code\\React\\userprofile\\src\\components\\posts\\Posts.js",["71"],"E:\\all code\\React\\userprofile\\src\\components\\profile\\Profile.js",[],"E:\\all code\\React\\userprofile\\src\\components\\layout\\Navbar.js",[],"E:\\all code\\React\\userprofile\\src\\contextApi\\users\\UsersContext.js",[],"E:\\all code\\React\\userprofile\\src\\contextApi\\users\\UsersReducer.js",[],"E:\\all code\\React\\userprofile\\src\\components\\Users\\Users.js",["72","73"],"import React, { useEffect, useContext, useMemo, useState } from \"react\";\r\nimport { UsersApi } from \"../../contextApi/users/UsersContext\";\r\nimport UserPagination from \"../layout/UsersPagination\";\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport const UsersScreen = () => {\r\n  const { getUserData, users, loading } = useContext(UsersApi);\r\n  const history = useHistory()\r\n  //Search\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchBtn, setSearchBtn] = useState(\"\");\r\n\r\n  //Table Pagination\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [userPerPage, setUserPerPage] = useState(3);\r\n\r\n  // Sorting Table\r\n  const [sorting, setSorting] = useState({ field: \"\", order: \"\" });\r\n  const [sortingField, setSortingField] = useState(\"\");\r\n  const [sortingOrder, setSortingOrder] = useState(\"asc\");\r\n\r\n  const onSortingChange = (field) => {\r\n    const order =\r\n      field === sortingField && sortingOrder === \"asc\" ? \"desc\" : \"asc\";\r\n    setSortingField(field);\r\n    setSortingOrder(order);\r\n    setSorting({ field, order });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserData();\r\n  }, []);\r\n\r\n\r\n  let tableData = useMemo(() => {\r\n    let computedData = users;\r\n\r\n    //Pagination\r\n\r\n    const indexOfLastPost = currentPage * userPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - userPerPage;\r\n    computedData = computedData.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    //Search Option\r\n    if (search) {\r\n      computedData = computedData.filter((data) => {\r\n        if (search.includes(\"@\")) {\r\n          return data.email.toLowerCase().includes(search.toLowerCase());\r\n        } else if (search.includes(\".\")) {\r\n          return data.website.toLowerCase().includes(search.toLowerCase());\r\n        } else {\r\n          return data.name.toLowerCase().includes(search.toLowerCase());\r\n        }\r\n      });\r\n    }\r\n\r\n    //Sorting\r\n\r\n    if (sorting.field) {\r\n      let reversed = sorting.order === \"asc\" ? 1 : -1;\r\n      computedData = computedData.sort(\r\n        (a, b) => reversed * a[sorting.field].localeCompare(b[sorting.field])\r\n      );\r\n    }\r\n    return computedData;\r\n  }, [users, currentPage, userPerPage, sorting, searchBtn]);\r\n\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <div>\r\n        <h1>All Users</h1>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-4\">\r\n          <div class=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Search....\"\r\n              onChange={(e) => setSearch(e.target.value)}\r\n              aria-label=\"Recipient's username\"\r\n              aria-describedby=\"button-addon2\"\r\n            />\r\n            <button\r\n              class=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              id=\"button-addon2\"\r\n              onClick={() => setSearchBtn(search) }\r\n            >\r\n              <i class=\"fas fa-search\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    { loading ? \"Loading...\" :  <div className=\"row\">\r\n        <div className=\"col-lg-12\">\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\" onClick={() => onSortingChange(\"name\")}>\r\n                  Name{\" \"}\r\n                  {sortingField && sortingField === \"name\" && (\r\n                    <i\r\n                      className={\r\n                        sortingOrder === \"asc\"\r\n                          ? \"fas fa-caret-down\"\r\n                          : \"fas fa-caret-up\"\r\n                      }\r\n                    ></i>\r\n                  )}\r\n                </th>\r\n                <th scope=\"col\" onClick={() => onSortingChange(\"email\")}>\r\n                  Email{\" \"}\r\n                  {sortingField && sortingField === \"email\" && (\r\n                    <i\r\n                      className={\r\n                        sortingOrder === \"asc\"\r\n                          ? \"fas fa-caret-down\"\r\n                          : \"fas fa-caret-up\"\r\n                      }\r\n                    ></i>\r\n                  )}\r\n                </th>\r\n                <th scope=\"col\">Website</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {tableData &&\r\n                tableData.map((data) => (\r\n                  <tr key={data.id}>\r\n                    <td><span\r\n                    onClick={()=>{\r\n                        history.push(`/Users/details/${data.id}`)\r\n                    }}\r\n                    >{data.name}</span></td>\r\n                    <td>{data.email}</td>\r\n                    <td>{data.website}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-1\">\r\n              <select\r\n                class=\"form-select\"\r\n                aria-label=\"Default select example\"\r\n                onChange={(e) => setUserPerPage(e.target.value)}\r\n                value={userPerPage}\r\n              >\r\n                <option value={3}>3</option>\r\n                <option value={5}>5</option>\r\n                <option value={users.length}>ALL</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-lg-11\">\r\n              <div className=\"page\">\r\n                <UserPagination\r\n                  PerPage={userPerPage}\r\n                  total={searchBtn.length > 0 ? tableData.length : users.length}\r\n                  paginate={paginate}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> }\r\n    </div>\r\n  );\r\n};\r\n","E:\\all code\\React\\userprofile\\src\\components\\layout\\UsersPagination.js",[],"E:\\all code\\React\\userprofile\\src\\components\\Users\\UserDetails.js",["74","75","76"],"import React, { useEffect, useContext,useState, useMemo } from \"react\";\r\nimport { UsersApi } from \"../../contextApi/users/UsersContext\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport UserDetailsPagination from '../../components/layout/UsersDetailsPagination'\r\n\r\nexport const UserDetails = () => {\r\n  const { userDetails, getUserDetails, loading } = useContext(UsersApi);\r\n\r\n  //Table Pagination\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [userPerPage, setUserPerPage] = useState(3);\r\n\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    getUserDetails(id);\r\n    return () => getUserDetails(0);\r\n \r\n  }, [id]);\r\n\r\n  let tableData = useMemo(() => {\r\n     if(userDetails){\r\n         let computedData = userDetails?.userPost;\r\n         //Pagination\r\n         const indexOfLastPost = currentPage * userPerPage;\r\n         const indexOfFirstPost = indexOfLastPost - userPerPage;\r\n         computedData = computedData.slice(indexOfFirstPost, indexOfLastPost);\r\n         return computedData;\r\n     }\r\n  }, [userDetails, currentPage]);\r\n\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      {loading ? (\r\n        \"loading...\"\r\n      ) : (\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4\">\r\n            <div class=\"card\">\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title\">User Information</h5>\r\n                <h6 class=\"card-subtitle mb-2 text-muted\">\r\n                  Name: {userDetails?.name}\r\n                </h6>\r\n                <p class=\"card-text\">Email: {userDetails?.email}</p>\r\n                <p class=\"card-text\">Address: {userDetails?.address?.city}</p>\r\n                <p class=\"card-text\">\r\n                  Company:\r\n                  <ul>\r\n                    <li>{userDetails?.company?.name}</li>\r\n                  </ul>\r\n                </p>\r\n                <a href={userDetails?.website} class=\"card-link\">\r\n                  Website\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-6\">\r\n            <div className=\"row\">\r\n              <div>\r\n                <h5>{userDetails.name} Posts</h5>\r\n              </div>\r\n              {tableData?.map((data) => (\r\n                <div className=\"col-lg-12 my-2\">\r\n                  {\" \"}\r\n                  <div class=\"card\">\r\n                    <h5 class=\"card-header\">{data.title}</h5>\r\n                    <div class=\"card-body\">\r\n                      <p class=\"card-text\">{data.body}</p>\r\n                    </div>\r\n                  </div>{\" \"}\r\n                </div>\r\n              ))}\r\n              <div className=\"page\">\r\n                <UserDetailsPagination\r\n                  PerPage={userPerPage}\r\n                  total={userDetails?.userPost?.length}\r\n                  paginate={paginate}\r\n                  id={id}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","E:\\all code\\React\\userprofile\\src\\components\\layout\\UsersDetailsPagination.js",[],"E:\\all code\\React\\userprofile\\src\\components\\profile\\actions.js",[],"E:\\all code\\React\\userprofile\\src\\components\\profile\\ActionForm.js",[],"E:\\all code\\React\\userprofile\\src\\components\\profile\\PostDetails.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":11,"column":7,"nodeType":"83","endLine":11,"endColumn":9,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"85","line":32,"column":6,"nodeType":"83","endLine":32,"endColumn":8,"suggestions":"86"},{"ruleId":"81","severity":1,"message":"87","line":66,"column":6,"nodeType":"83","endLine":66,"endColumn":59,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":11,"column":23,"nodeType":"91","messageId":"92","endLine":11,"endColumn":37},{"ruleId":"81","severity":1,"message":"93","line":18,"column":6,"nodeType":"83","endLine":18,"endColumn":10,"suggestions":"94"},{"ruleId":"81","severity":1,"message":"95","line":29,"column":6,"nodeType":"83","endLine":29,"endColumn":32,"suggestions":"96"},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["99"],"React Hook useEffect has a missing dependency: 'getUserData'. Either include it or remove the dependency array.",["100"],"React Hook useMemo has a missing dependency: 'search'. Either include it or remove the dependency array.",["101"],"no-unused-vars","'setUserPerPage' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getUserDetails'. Either include it or remove the dependency array.",["102"],"React Hook useMemo has a missing dependency: 'userPerPage'. Either include it or remove the dependency array.",["103"],"no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [getData]",{"range":"114","text":"115"},"Update the dependencies array to be: [getUserData]",{"range":"116","text":"117"},"Update the dependencies array to be: [users, currentPage, userPerPage, search, sorting.field, sorting.order]",{"range":"118","text":"119"},"Update the dependencies array to be: [getUserDetails, id]",{"range":"120","text":"121"},"Update the dependencies array to be: [userDetails, currentPage, userPerPage]",{"range":"122","text":"123"},[326,328],"[getData]",[1108,1110],"[getUserData]",[2117,2170],"[users, currentPage, userPerPage, search, sorting.field, sorting.order]",[637,641],"[getUserDetails, id]",[1031,1057],"[userDetails, currentPage, userPerPage]"]